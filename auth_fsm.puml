@startuml
hide empty description

title Authorization FSM\n

legend right
  == External Events ==
  * AuthWebhookFromZooz
  * Job
  * PaymentWebhookFromZooz
  * RequestFromGPM
  == Memory ==
  * authAttempts
  * authErr
  * authFailureMessage
  * authStatus
  * paymentAttempts
  * paymentErr
  * paymentStatus
  * tokenAttempts
  * tokenErr
end legend

skinparam StateBackgroundColor<<Permanent>> LightBlue

state Initial            <<Permanent>>
state New                              : paymentStatus, paymentErr = createPayment()\npaymentAttempts++
state PaymentCreated
state PaymentSucceeded                 : tokenErr = getTokenFromPMS()\ntokenAttempts++
state TokenOK                          : authStatus, authFailureMessage, authErr = createAuth()\nauthAttempts++
state AuthCreated
state AuthSucceeded                    : sendSuccessToGPM()
state Succeeded          <<Permanent>>
state AuthError
state AuthFailed
state AuthPending        <<Permanent>> : sendPendingToGPM()\nscheduleJob()
state AuthRetry          <<Permanent>> : scheduleJob()
state CheckAuthStatus                  : authStatus, authErr = getAuthStatusFromZooz()
state CheckPaymentStatus               : paymentStatus = getPaymentStatusFromZooz()
state Failed             <<Permanent>>
state Failing                          : sendErrorToGPM()
state PaymentError
state PaymentPending     <<Permanent>> : scheduleJob()
state PaymentRetry       <<Permanent>> : scheduleJob()
state TokenError
state TokenRetry         <<Permanent>> : scheduleJob()


Initial             -[bold]->    New                : **RequestFromGPM**
New                 ->           PaymentCreated     : [paymentErr == nil]
PaymentCreated      --->         PaymentSucceeded   : [paymentStatus == "succeeded"]
PaymentSucceeded    --->         TokenOK            : [tokenErr == nil]
TokenOK             -->          AuthCreated        : [authErr == nil]
AuthCreated         -->          AuthSucceeded      : [authStatus == "succeeded"]
AuthSucceeded       -[dashed]->  Succeeded
Succeeded           -[bold]->    AuthSucceeded      : **RequestFromGPM**
Succeeded           -[hidden]->  AuthSucceeded

AuthCreated         -->          AuthFailed         : [authStatus == "failed"]
AuthCreated         -->          AuthPending        : [authStatus == "pending"]
AuthError           -->          AuthRetry          : [canTechnicalRetry(\l   authErr,\l   authAttempts)]
AuthError           -->          Failing            : [!canTechnicalRetry(\l   authErr,\l   authAttempts)]
AuthFailed          -->          AuthRetry          : [canRetryAuth(\l   authFailureMessage,\l   authAttempts)]
AuthFailed          -->          Failing            : [!canRetryAuth(\l   authFailureMessage,\l   authAttempts)]
AuthPending         -[bold]->    AuthCreated        : **AuthWebhookFromZooz**
AuthPending         -[bold]->    CheckAuthStatus    : **Job**
AuthPending         -[bold]->    CheckAuthStatus    : **RequestFromGPM**
AuthRetry           -[bold]->    TokenOK            : **Job**
AuthRetry           -[bold]->    TokenOK            : **RequestFromGPM**
CheckAuthStatus     -[dashed]->  AuthCreated
CheckPaymentStatus  -[dashed]->  PaymentCreated
Failed              -[bold]->    Failing            : **RequestFromGPM**
Failed              -[hidden]->  Failing
Failing             -[dashed]->  Failed
New                 -->          PaymentError       : [paymentErr != nil]
PaymentCreated      -->          PaymentPending     : [paymentStatus == "pending"]
PaymentError        -->          Failing            : [!canRetryPayment(\l   paymentError,\l   paymentAttempts)]
PaymentError        -->          PaymentRetry       : [canRetryPayment(\l   paymentError,\l   paymentAttempts)]
PaymentPending      -[bold]->    CheckPaymentStatus : **Job**
PaymentPending      -[bold]->    CheckPaymentStatus : **RequestFromGPM**
PaymentPending      -[bold]->    PaymentCreated     : **PaymentWebhookFromZooz**
PaymentRetry        -[bold]->    New                : **Job**
PaymentRetry        -[bold]->    New                : **RequestFromGPM**
PaymentSucceeded    -->          TokenError         : [tokenErr != nil]
TokenError          -->          Failing            : [!canRetryToken(\l   tokenErr,\l   tokenAttempts)]
TokenError          -->          TokenRetry         : [canRetryToken(\l   tokenErr,\l   tokenAttempts)]
TokenOK             -->          AuthError          : [authErr != nil]
TokenRetry          -[bold]->    PaymentSucceeded   : **Job**
TokenRetry          -[bold]->    PaymentSucceeded   : **RequestFromGPM**

@enduml